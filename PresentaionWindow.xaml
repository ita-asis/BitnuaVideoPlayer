<Window x:Class="BitnuaVideoPlayer.PresentaionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d"
        
        xmlns:Vlc="clr-namespace:Vlc.DotNet.Wpf;assembly=Vlc.DotNet.Wpf"
        xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        xmlns:my="clr-namespace:BitnuaVideoPlayer"
        xmlns:UI="clr-namespace:BitnuaVideoPlayer.UI"
        xmlns:props="clr-namespace:BitnuaVideoPlayer.UI.AttachedProps"
        Title="MainWindow"
        Closed="Window_Closed"
        Height="{my:SettingBinding  prWindow.Height}"
        Width="{my:SettingBinding   prWindow.Width}"
        Left="{my:SettingBinding    prWindow.Left}"
        Top="{my:SettingBinding     prWindow.Top}">
    <Window.Resources>
        <my:GridLengthConverter x:Key="gridLengthConverter" />
        <my:ColorToSolidColorBrushValueConverter x:Key="colorCnv"/>
        <my:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <my:EnumBooleanConverter x:Key="enumToBool"/>
        <my:StringToEnumConverter x:Key="stringToEnum"/>
        <my:BoolToGridRowHeightConverter x:Key="bool2Grid" />
        <my:BoolToGridRowHeightMultiConverter x:Key="bool2GridMulti" />
        
        <DataTemplate DataType="{x:Type my:PictureItem}">
            <UI:PresentationCanvasItem>
                <Viewbox StretchDirection="Both" Stretch="Fill">
                    <Image props:PicCtrlBehavior.ImageSource="{Binding Path}" />
                </Viewbox>
            </UI:PresentationCanvasItem>
        </DataTemplate>
        <DataTemplate DataType="{x:Type my:VideoItem}">
            <UI:PresentationCanvasItem>
                <Vlc:VlcControl>
                    <i:Interaction.Behaviors>
                        <props:VideoCtrlBehavior Source="{Binding VideoSource}"/>
                    </i:Interaction.Behaviors>
                </Vlc:VlcControl>
            </UI:PresentationCanvasItem>
        </DataTemplate>
        <DataTemplate DataType="{x:Type my:VideoListItem}">
            <UI:PresentationCanvasItem>
                <Vlc:VlcControl>
                    <i:Interaction.Behaviors>
                        <props:VideoDirPlayerBehaviour Videos="{Binding VideoSources}"/>
                    </i:Interaction.Behaviors>
                </Vlc:VlcControl>
            </UI:PresentationCanvasItem>
        </DataTemplate>
        <DataTemplate DataType="{x:Type my:YoutubeVideoItem}">
            <UI:PresentationCanvasItem Background="Green">
                <props:YoutubeWebBrowser IsEnabled="True" Margin="-8,-8,-12,-12">
                    <i:Interaction.Behaviors>
                        <props:YouTubeCtrlBehaviour YouTubeId="{Binding VideoSource.VideoId}"/>
                    </i:Interaction.Behaviors>
                </props:YoutubeWebBrowser>
            </UI:PresentationCanvasItem>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>



        <Grid x:Name="defualtLayout"
              Grid.Row="1"
              Tag="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=Default}"
              Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >


            <Grid x:Name="defualtLayoutGridRowSpliterHover"
                  Panel.ZIndex="1">
                <Grid.RowDefinitions>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Setter Property="Height" Value="*" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DefaultLayout_SongInfoShowOnTop}" Value="True">
                                        <Setter Property="Height" Value="{Binding DefaultLayout_SongInfoHeight, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                    <RowDefinition Height="5"/>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Setter Property="Height" Value="{Binding DefaultLayout_SongInfoHeight, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DefaultLayout_SongInfoShowOnTop}" Value="True">
                                        <Setter Property="Height" Value="*" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                </Grid.RowDefinitions>

                <Grid x:Name="defualtLayoutGridColSpliterHover"
                      Grid.Row="0"
                      Visibility="{Binding ShowLeftPic, Converter={StaticResource BoolToVis}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding DefaultLayout_LeftWidth, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}"/>
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <GridSplitter Grid.Column="1"
                                  Width="5"
                                  HorizontalAlignment="Stretch" />
                </Grid>


                <GridSplitter Grid.Row="1"
                              Height="5"
                              HorizontalAlignment="Stretch"
                              Visibility="{Binding ShowSongInfo, Converter={StaticResource BoolToVis}}"/>
            </Grid>
            <Grid Panel.ZIndex="0">
              
                <Grid.RowDefinitions>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Setter Property="Height" Value="*" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DefaultLayout_SongInfoShowOnTop}" Value="True">
                                        <Setter Property="Height">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource bool2GridMulti}">
                                                    <Binding Path="ShowSongInfo" Mode="TwoWay"/>
                                                    <Binding Path="DefaultLayout_SongInfoHeight" Mode="TwoWay" Converter="{StaticResource gridLengthConverter}"/>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                    <RowDefinition Height="{Binding ShowSongInfo, Converter={StaticResource bool2Grid}, ConverterParameter=5}"/>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Setter Property="Height">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource bool2GridMulti}">
                                            <Binding Path="ShowSongInfo" Mode="TwoWay"/>
                                            <Binding Path="DefaultLayout_SongInfoHeight" Mode="TwoWay" Converter="{StaticResource gridLengthConverter}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DefaultLayout_SongInfoShowOnTop}" Value="True">
                                        <Setter Property="Height" Value="*" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                </Grid.RowDefinitions>
                <!--LeftPanel - Pics-->
                <Grid x:Name="songVideoPicGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition>
                            <ColumnDefinition.Width>
                                <MultiBinding Converter="{StaticResource bool2GridMulti}">
                                    <Binding Path="ShowLeftPic" Mode="TwoWay"/>
                                    <Binding Path="DefaultLayout_LeftWidth" Mode="TwoWay" Converter="{StaticResource gridLengthConverter}"/>
                                </MultiBinding>
                            </ColumnDefinition.Width>
                        </ColumnDefinition>
                        <ColumnDefinition Width="{Binding ShowLeftPic, Converter={StaticResource bool2Grid}, ConverterParameter=5}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" 
                              Visibility="{Binding ShowLeftPic, Converter={StaticResource BoolToVis}}">
                    <Grid Tag="{Binding Path=SelectedPicMode, Converter={StaticResource enumToBool}, ConverterParameter=Pics}"
                          Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Viewbox StretchDirection="Both" Stretch="{Binding PicStretch, Mode=OneWay, Converter={StaticResource stringToEnum}}">
                            <Image Source="{Binding LeftPicSource}"
                               />
                        </Viewbox>
                        <Label Grid.Row="1"
                           HorizontalAlignment="Stretch" 
                           VerticalAlignment="Stretch"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
                           
                           Background ="{Binding LeftPicTitle.BackColor, Converter={StaticResource colorCnv}}"
                           Foreground ="{Binding LeftPicTitle.ForeColor, Converter={StaticResource colorCnv}}"
                           Content    ="{Binding LeftPicTitle.Text}" 
                           FontSize   ="{Binding LeftPicTitle.FontSize}" 
                           FontFamily ="{Binding LeftPicTitle.FontFamily}" 
                           />

                    </Grid>

                    <!--LeftPanel - Lyrics-->
                    <Grid Tag="{Binding Path=SelectedPicMode, Converter={StaticResource enumToBool}, ConverterParameter=Lyrics}"
                          Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >
                        <Viewbox Stretch="Fill" StretchDirection="Both">

                            <TextBlock TextWrapping="Wrap" 
                               TextAlignment="Right"
                               Padding="4"
                               Text="{Binding Song.Lyrics}" 
                               FontSize="{Binding Lyrics.FontSize}" 
                               FontFamily="{Binding Lyrics.FontFamily}"
                               Background="{Binding Lyrics.BackColor,Converter={StaticResource colorCnv}}"
                               Foreground="{Binding Lyrics.ForeColor,Converter={StaticResource colorCnv}}"/>
                        </Viewbox>
                    </Grid>

                    <!--LeftPanel - Flyer-->
                    <Grid Tag="{Binding Path=SelectedPicMode, Converter={StaticResource enumToBool}, ConverterParameter=Flyer}"
                          Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >

                        <Image x:Name="m_FlyerPic"
                           Source="{Binding LeftPicSource}"
                           StretchDirection="Both"
                           Stretch="{Binding PicStretch, Mode=OneWay, Converter={StaticResource stringToEnum}}"
                           />
                    </Grid>
                </Grid>
                <GridSplitter Grid.Column="1"
                              Width="5"
                              Visibility="{Binding ShwoLeftPic, Converter={StaticResource BoolToVis}}"
                                  Foreground="Yellow"
                              
                              HorizontalAlignment="Stretch" />
                
                <ContentControl Content="{Binding DefaultLayout_VideoItem}" Grid.Column="2" >
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type my:VideoListItem}">
                                <Vlc:VlcControl>
                                    <i:Interaction.Behaviors>
                                        <props:VideoDirPlayerBehaviour Videos="{Binding VideoSources}"/>
                                    </i:Interaction.Behaviors>
                                </Vlc:VlcControl>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
                </Grid>


                <!--Song Info-->
                <Grid x:Name="songInfoGrid"
                    Grid.Row="2"
                  Grid.ColumnSpan="3"
                  Height="{Binding DefaultLayout_SongInfoHeight, Mode=TwoWay, Converter={StaticResource gridLengthConverter}}"
                  MaxHeight="{Binding DefaultLayout_SongInfoHeight, Converter={StaticResource gridLengthConverter}}"
                  Visibility="{Binding ShowSongInfo, Converter={StaticResource BoolToVis}}"
                      >
                    <CheckBox Visibility="Collapsed" IsChecked="{Binding DefaultLayout_SongInfoShowOnTop}" 
                      Checked  ="songInfoShowOnTopChecked"
                      Unchecked="songInfoShowOnTopChecked"
                      DataContextChanged="CheckBox_DataContextChanged"/>
                    
                    <UI:SongInfoControl />
                </Grid>

            </Grid>
        </Grid>
        <Grid x:Name="presentationLayout"
              Grid.Row="1"
              Tag="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=Presentation}"
              Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >
            <Grid.Resources>
            </Grid.Resources>
            <Viewbox Stretch="Fill" Grid.Row="1">
                <ItemsControl ItemsSource="{Binding PresentationVM.PresentationItems}" x:Name="DesignerCanvas"
                              Background="#303030">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas  IsItemsHost="True"
                                     ClipToBounds="True"
                                     Width="640"
                                     Height="360"
                                     SnapsToDevicePixels="True"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                            <!--<Setter Property="RotateTransform.Angle" Value="{Binding Angle, Mode=TwoWay }"/>-->
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <RotateTransform Angle="{Binding Angle, Mode=TwoWay}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Viewbox>


        </Grid>
      
        <Grid x:Name="statusGrid" Height="{Binding Banner.Height}"
              Visibility="{Binding Banner.IsVisible, Converter={StaticResource BoolToVis}}">
            <CheckBox Visibility="Collapsed" IsChecked="{Binding Banner.ShowOnTop}" 
                      Checked="bannerShowOnTopChecked"
                      Unchecked="bannerShowOnTopChecked"
                      DataContextChanged="CheckBox_DataContextChanged"/>
            <UI:BannerControl Height="{Binding Banner.Height}"/>
        </Grid>

    </Grid>
        
</Window>
