<Window x:Class="BitnuaVideoPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d"

        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:my="clr-namespace:BitnuaVideoPlayer"
        xmlns:UI="clr-namespace:BitnuaVideoPlayer.UI"
        Title="Bitnua Video Player"
        x:Name="mainWindow"
        Left="{my:SettingBinding    rmtCtrl.Left}"
        Top="{my:SettingBinding     rmtCtrl.Top}" 
        Height="{my:SettingBinding   rmtCtrl.Height}"
        Width="{my:SettingBinding   rmtCtrl.Width}"
        SizeToContent="WidthAndHeight" ResizeMode="CanMinimize">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MoveResizeRotateWithAdorners;component/Resources/DesignerItem.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <my:MainViewModel x:Key="designVM"/>

            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <my:EnumBooleanConverter x:Key="enumToBool"/>
            <my:Value2BoolConverter x:Key="flowDirection2Bool" >
                <my:Value2BoolConverter.TrueValue>
                    <FlowDirection>LeftToRight</FlowDirection>
                </my:Value2BoolConverter.TrueValue>
                <my:Value2BoolConverter.FalseValue>
                    <FlowDirection>RightToLeft</FlowDirection>
                </my:Value2BoolConverter.FalseValue>
            </my:Value2BoolConverter>
            <my:ColorToSolidColorBrushValueConverter x:Key="colorCnv"/>
            <my:AngleConverter x:Key="AngleConverter"/>
            <Style x:Key="colorBtn" TargetType="Button">
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Background" Value="{Binding Converter={StaticResource colorCnv}}"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
        <!--StretchDirection="Both" Stretch="Uniform"
             VerticalAlignment="Top" HorizontalAlignment="Left"-->
        <!--<Grid d:DataContext="{StaticResource designVM}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>-->
        <StackPanel d:DataContext="{StaticResource designVM}" Width="330">
            <DockPanel VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <RadioButton GroupName="layoutGrp" Margin="4" Content="Default" IsChecked="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=Default}"/>
                    <RadioButton GroupName="layoutGrp" Margin="4" Content="Presentation" IsChecked="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=Presentation}"/>
                    <!--<RadioButton GroupName="layoutGrp" Margin="4" Content="Two videos"   IsChecked="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=TwoVideos}"/>-->
                    <!--<RadioButton GroupName="layoutGrp" Margin="4" Content="Three Pictures" IsChecked="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=ThreePics}"/>-->
                </StackPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,2,0,0">
                    <Button Padding="3" Margin="4,0"
                                Click="btnRestorePresentaionWindow" Width="25">
                        <Image Source="Resources\restore.png" Stretch="Uniform"/>
                    </Button>
                    <Button Padding="3" Margin="4,0"
                    Click="btnShowPresentaionWindow" Width="25" >
                        <Image Source="Resources\export-arrow.png" Stretch="Uniform"/>
                    </Button>
                    <Button Padding="3" Margin="4,0"
                    Click="btnHidePresentaionWindow" Width="25" >
                        <Image Source="Resources\close-button.png" Stretch="Uniform"/>
                    </Button>
                </StackPanel>
            </DockPanel>
            <!--Default Layout-->
            <Grid Grid.Row="1"
              Tag="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=Default}"
              Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <DockPanel Margin="4,0">
                    <StackPanel Orientation="Vertical" Visibility="{Binding IsOnline, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Client" Padding="2" Margin="2"
                               HorizontalAlignment="Left"/>
                        <ComboBox SelectedItem="{Binding CurrentClient}"
                          ItemsSource="{Binding ActiveClients}"
                          Padding="4" Margin="2"/>
                    </StackPanel>
                    <TextBlock Visibility="{Binding IsOffline, Converter={StaticResource BoolToVis}}"
                            Text="Offline mode" Padding="2" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" DockPanel.Dock="Right"  
                                Orientation="Horizontal" Margin="0,4,0,0">
                        <ListBox SelectionMode="Multiple" >
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}">LightGreen</SolidColorBrush>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border Name="Border" Padding="2" Margin="2,0" SnapsToDevicePixels="true">
                                                    <ContentPresenter />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style TargetType="{x:Type Label}">
                                    <Style.Setters>
                                        <Setter Property="Padding" Value="4"/>
                                        <Setter Property="FontSize" Value="10"/>
                                    </Style.Setters>
                                </Style>
                            </ListBox.Resources>
                            <ListBoxItem IsSelected="{Binding ShowEng}" >
                                <Label Content="English" />
                            </ListBoxItem>
                            <ListBoxItem IsSelected="{Binding ShowHeb}">
                                <Label Content="עברית"/>
                            </ListBoxItem>
                        </ListBox>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Switch:" Margin="4"/>
                            <xctk:IntegerUpDown Value="{Binding LangTicks}" Margin="0,4" Minimum="1" ClipValueToMinMax="True"/>
                        </StackPanel>
                    </StackPanel>
                </DockPanel>
                <DockPanel  Grid.Row="1" Margin="6,0">
                    <CheckBox IsChecked="{Binding Clock.IsShow}" 
                      Content="Show Clock ?" 
                      DockPanel.Dock="Left"
                      VerticalAlignment="Center"
                      Margin="6,0"/>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right" >
                        <Button x:Name="playPauseBtn" Command="UI:AppCommands.PlayToggleCommand"
                                      ToolTip="Play/Pause"
                                      Width="34" Height="34" Margin="0,0,4,0">
                            <Image Margin="2" Source="Resources/pause.png"/>
                        </Button>
                        <Button Command="UI:AppCommands.StopCommand"
                                      ToolTip="Stop"
                                      Width="34" Height="34" Margin="0,0,4,0">
                            <Image Margin="2" Source="Resources/stop.png"/>
                        </Button>
                        <ToggleButton IsChecked="{Binding MuteSound, Mode=TwoWay}" 
                                      ToolTip="Sound On/Off"
                                      Width="34" Height="34">
                            <Image Margin="2">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MuteSound}" Value="true">
                                                <Setter Property="Source" Value="Resources/sound-off.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MuteSound}" Value="false">
                                                <Setter Property="Source" Value="Resources/sound-on.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ToggleButton>
                    </StackPanel>

                </DockPanel>

                <TabControl Grid.Row="2" Margin="10" BorderBrush="Gainsboro">
                    <TabControl.Resources>
                        <Style TargetType="TabItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>


                    <TabItem Header="Main video">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ComboBox x:Name="cbVids"
                                  ItemsSource="{Binding VideoModes}" 
                                  DisplayMemberPath="Text"
                                  SelectedItem="{Binding SelectedVideoMode, Mode=TwoWay}"
                                   />

                            <Button x:Name="editVidsBtn" Grid.Column="1" Margin="4,0,0,0" Click="EditVidsBtn_Click" Width="20" Height="20">
                                <Image Margin="2" Source="Resources/settings.png"/>
                            </Button>
                            <WrapPanel Grid.Row="1" Visibility="{Binding IsClipMode, Converter={StaticResource BoolToVis}}">
                                <ItemsControl ItemsSource="{Binding ClipTypes}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Margin="4" Content="{Binding Text}" IsChecked="{Binding IsChecked}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </WrapPanel>

                            <Grid x:Name="vidEditPopup" Grid.Row="2" MaxHeight="200"  Visibility="Visible" Grid.ColumnSpan="2"  Margin="0,4">
                                <Button x:Name="addVidsBtn" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top"
                                    Margin="0,3,2,0" Click="AddVidsBtn_Click" Width="20" Height="20" Panel.ZIndex="1">
                                    <Image Margin="2" Source="Resources/pen.png"/>
                                </Button>
                                <DataGrid ItemsSource="{Binding VideoModes}"
                                          x:Name="vidsGrid"
                                          AlternatingRowBackground="#f0f0f0" 
                                          AutoGenerateColumns="False"
                                          CanUserSortColumns="False"
                                          RowHeaderWidth="14"
                                          CanUserAddRows="False"
                                          CanUserDeleteRows="True"
                                          CanUserReorderColumns="False"
                                          PreviewKeyDown="VidsGrid_PreviewKeyDown"
                                          KeyboardNavigation.AcceptsReturn="False"
                                          KeyboardNavigation.DirectionalNavigation="None">
                                    <DataGrid.Resources>
                                        <my:BindingProxy x:Key="proxy" Data="{Binding}" />
                                    </DataGrid.Resources>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Text" Binding="{Binding Text}" Width="Auto"/>

                                        <DataGridTemplateColumn Header="Source" Width="2*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock x:Name="brsVidDir" Tag="{Binding}" PreviewMouseLeftButtonUp="BrsVidDir_PreviewMouseLeftButtonUp"
                                                               ToolTip="{Binding Path=Source}" Text="{Binding Path=Source, Mode=TwoWay}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Header = "Pattern" Width="2*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <!--<TextBox>
                                                        <TextBox.Text>
                                                            <Binding Mode="TwoWay" Path="SearchPattern"></Binding>
                                                        </TextBox.Text>
                                                        <i:Interaction.Behaviors>
                                                            <props:AutoCompleteBehavior AutoCompleteItemsSource="{Binding Data.SongFieldsForSearch, Source={StaticResource proxy}}" AutoCompleteIndicator="@"/>
                                                        </i:Interaction.Behaviors>
                                                    </TextBox>-->

                                                    <UI:AutoCompleteTextBox ItemsSource="{Binding Data.SongFieldsForSearch, Source={StaticResource proxy}}" 
                                                                            AutoCompleteText="{Binding SearchPattern, Mode=TwoWay}"
                                                                            Indicator="@"
                                                                            ToolTip="{Binding SearchPattern}"/>

                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--<DataGridTextColumn Binding="{Binding SearchPattern, Mode=TwoWay}"/>-->
                                    </DataGrid.Columns>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEditable}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>

                                </DataGrid>
                            </Grid>

                        </Grid>
                    </TabItem>
                    <TabItem Header="Left Side">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <CheckBox Content="Show ?" IsChecked="{Binding ShowLeftPic}" Margin="4"/>

                            <WrapPanel Grid.Row="1" >
                                <RadioButton GroupName="leftPicRbs" x:Name="rb_lyrics"  Margin="4" Content="Lyrics"  IsChecked="{Binding Path=SelectedPicMode, Converter={StaticResource enumToBool}, ConverterParameter=Lyrics}"/>
                                <RadioButton GroupName="leftPicRbs" x:Name="rb_flyer"   Margin="4" Content="Flyer"   IsChecked="{Binding Path=SelectedPicMode, Converter={StaticResource enumToBool}, ConverterParameter=Flyer}"/>
                                <RadioButton GroupName="leftPicRbs" x:Name="rb_picture" Margin="4" Content="Picture" IsChecked="{Binding Path=SelectedPicMode, Converter={StaticResource enumToBool}, ConverterParameter=Pics}"/>
                            </WrapPanel>

                            <!--Lyics fonts-->
                            <GroupBox Grid.Row="2" Header="Lyrics" Visibility="{Binding ElementName=rb_lyrics, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Click="btnLyricsFontPicker" 
                        Content="Font"
                        Margin="4,0,4,1"
                        Height="25"
                        Padding="4,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"/>
                                        <Button Click="btnLyricsForeColorPicker" 
                        Style="{StaticResource colorBtn}"
                        DataContext="{Binding Lyrics.ForeColor}"
                        Margin="4,0"
                        BorderThickness="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"/>
                                        <Button Click="btnLyricsBackColorPicker" 
                        Style="{StaticResource colorBtn}"
                        DataContext="{Binding Lyrics.BackColor}"
                        Margin="4,0"
                        BorderThickness="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"/>
                                    </StackPanel>

                                </Grid>
                            </GroupBox>
                            <!--Pic Header fonts-->
                            <GroupBox 
                        Grid.Row="2" 
                        
                        Header="Pic Header" 
                        Visibility="{Binding ElementName=rb_picture, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <UniformGrid 
                                Visibility="{Binding ElementName=rb_picture, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                                        <CheckBox Content="Creator"   IsChecked="{Binding Pic_ShowCreator}" />
                                        <CheckBox Content="Performer" IsChecked="{Binding Pic_ShowPerformer}" />
                                        <CheckBox Content="Composer"  IsChecked="{Binding Pic_ShowComposer}" />
                                        <CheckBox Content="Writer"    IsChecked="{Binding Pic_ShowWriter}" />
                                        <CheckBox Content="Name"      IsChecked="{Binding Pic_ShowSongName}" />
                                        <CheckBox Content="Event"     IsChecked="{Binding Pic_ShowEvent}" />
                                        <CheckBox Content="Default"   IsChecked="{Binding Pic_ShowDefault}" />
                                    </UniformGrid>
                                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                                        <Button Click="btnLeftPicHeaderFontPicker" 
                                    Content="Font"
                                    Margin="4,0,4,1"
                                    Height="25"
                                    Padding="4,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"/>
                                        <Button Click="btnLeftPicHeaderForeColorPicker" 
                                    Style="{StaticResource colorBtn}"
                                    DataContext="{Binding LeftPicTitle.ForeColor}"
                                    Margin="4,0"
                                    BorderThickness="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                                        <Button Click="btnLeftPicHeaderBackColorPicker" 
                                    Style="{StaticResource colorBtn}"
                                    DataContext="{Binding LeftPicTitle.BackColor}"
                                    Margin="4,0"
                                    BorderThickness="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                                        <ComboBox Text="{Binding PicStretch}">
                                            <ComboBoxItem>None</ComboBoxItem>
                                            <ComboBoxItem>Fill</ComboBoxItem>
                                            <ComboBoxItem>Uniform</ComboBoxItem>
                                            <ComboBoxItem>UniformToFill</ComboBoxItem>
                                        </ComboBox>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Song info">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel VerticalAlignment="Top" 
                                HorizontalAlignment="Right" 
                                Grid.Column="1" 
                                Orientation="Horizontal">
                                <Button Padding="3" Margin="4,0"
                                Click="btnRestoreSongInfoPopup" Width="25">
                                    <Image Source="Resources\restore.png" Stretch="Uniform"/>
                                </Button>
                                <Button Padding="3" Margin="4,0"
                                Click="btnShowSongInfoPopup" Width="25">
                                    <Image Source="Resources\export-arrow.png" Stretch="Uniform"/>
                                </Button>
                                <Button Padding="3" Margin="4,0"
                                Click="btnHideSongInfoPopup" Width="25" >
                                    <Image Source="Resources\close-button.png" Stretch="Uniform"/>
                                </Button>
                            </StackPanel>
                            <WrapPanel Orientation="Horizontal">
                                <CheckBox Content="Show ?" IsChecked="{Binding ShowSongInfo}" Margin="8,4"/>
                                <CheckBox Content="Show pic ?" IsChecked="{Binding ShowSongInfoPic}" Margin="8,4"/>
                                <CheckBox Content="Show type ?" IsChecked="{Binding ShowType}" Margin="8,4"/>
                            </WrapPanel>
                            <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Position"/>
                                    <RadioButton x:Name="rb_SongInfoPosButtom" Content="Buttom"  Margin="4,0,4,0" IsChecked="True" VerticalAlignment="Center" />
                                    <RadioButton x:Name="rb_SongInfoPosTop" Content="Top" Margin="4,0,10,0" IsChecked="{Binding DefaultLayout_SongInfoShowOnTop}" VerticalAlignment="Center" />
                                </StackPanel>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>


                                    <Label Content="Song Title" Grid.Row="1" Grid.Column="0" />
                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" >
                                        <Button Click="btnSongInfoFontPicker" 
                                    Content="Font"
                                    Margin="4,0,4,1"
                                    Height="25"
                                    Padding="4,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"/>
                                        <Button Click="btnSongInfoForeColorPicker" 
                                    Style="{StaticResource colorBtn}"
                                    DataContext="{Binding SongInfo01.ForeColor}"
                                    Margin="4,0"
                                    BorderThickness="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                                    </StackPanel>

                                    <Label Content="Song Type" Grid.Row="3" Grid.Column="0"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1">
                                        <ComboBox Margin="4,0,4,1"
                                          ItemsSource="{Binding TypesFormats}" 
                                          DisplayMemberPath="Type"
                                          SelectedItem="{Binding SelectedTypeFormat}"/>

                                        <Button Click="btnSongInfoTypeFontPicker" 
                                        Content="Font"
                                        Margin="4,0,4,1"
                                        Height="25"
                                        Padding="4,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"/>
                                        <Button Click="btnSongInfoTypeForeColorPicker" 
                                        Style="{StaticResource colorBtn}"
                                        DataContext="{Binding SelectedTypeFormat.Format.ForeColor}"
                                        Margin="4,0"
                                        HorizontalAlignment="Left"
                                        BorderThickness="2"
                                        VerticalAlignment="Top" Width="23"/>
                                        <Button Click="btnSongInfoTypeBackColorPicker" 
                                        Style="{StaticResource colorBtn}"
                                        DataContext="{Binding SelectedTypeFormat.Format.BackColor}"
                                        Margin="4,0"
                                        BorderThickness="2"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top" Width="23"/>

                                    </StackPanel>

                                    <Label Content="Song Details" Grid.Row="2" Grid.Column="0"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                                        <Button Click="btnSongInfo2FontPicker" 
                                        Content="Font"
                                        Margin="4,0,4,1"
                                        Height="25"
                                        Padding="4,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"/>
                                        <Button Click="btnSongInfo2ForeColorPicker" 
                                        Style="{StaticResource colorBtn}"
                                        DataContext="{Binding SongInfo02.ForeColor}"
                                        Margin="4,0"
                                        BorderThickness="2"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top" Width="23"/>

                                    </StackPanel>


                                    <Label Content="Background" Grid.Row="0" Grid.Column="0"/>
                                    <Button Click="btnSongInfoBackColorPicker" 
                                Grid.Row="0" Grid.Column="1"
                                Style="{StaticResource colorBtn}"
                                DataContext="{Binding SongInfo01.BackColor}"
                                Margin="4,0"
                                BorderThickness="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"/>


                                </Grid>

                            </StackPanel>
                        </Grid>
                    </TabItem>
                </TabControl>


            </Grid>

            <!--Presentation Layout-->
            <Grid Grid.Row="1"
              Tag="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=Presentation}"
              Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <GroupBox Header="New item">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                <ObjectDataProvider.MethodParameters>
                                    <x:Type TypeName="my:ePresentationKinds"/>
                                </ObjectDataProvider.MethodParameters>
                            </ObjectDataProvider>
                        </Grid.Resources>
                        <Label Grid.Row="0" Grid.Column="0" Content="Type" />

                        <ComboBox Grid.Column="1" x:Name="presentaionItemCB" ItemsSource="{Binding Source={StaticResource dataFromEnum}}" 
                              SelectedIndex="0"
                              HorizontalAlignment="Left"
                              Margin="4,0"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Path" />
                        <CheckBox Visibility="Collapsed" 
                              IsChecked="{Binding Path=SelectedValue, ElementName=presentaionItemCB, Converter={StaticResource enumToBool}, ConverterParameter=AmpsLive}" 
                              Checked  ="presentaionItemCBChecked"
                              Unchecked="presentaionItemCBChecked"
                              DataContextChanged="presentaionItemCBContextChanged"/>

                        <TextBox Grid.Row="1" Grid.Column="1" x:Name="persentaionItemPath" Margin="4,0"/>
                        <Button Grid.Row="1" Grid.Column="2" x:Name="btnPresentationPath"
                            Content="..."
                            Padding="4,0"
                            Margin="0,0,4,0"
                            Click="btnPresentationPathBrowse"/>
                        <Button Grid.Row="0" Grid.Column="3"
                            Grid.RowSpan="2"
                            Content="Add"
                            Padding="8,0"
                            Margin="0,0,4,0"
                            Click="addPresentationItemClick"/>
                    </Grid>

                </GroupBox>


                <Viewbox Stretch="Uniform" Grid.Row="1" Margin="4,0">
                    <ListView ItemsSource="{Binding PresentationVM.PresentationItems}" x:Name="DesignerCanvas"
                          SelectedItem="{Binding PVM.SelectedPresentationItem, ElementName=mainWindow, Mode=TwoWay}"
                          Background="#303030"
                          Padding="4">
                        <ItemsControl.Resources>

                            <!--videoItem-->
                            <DataTemplate DataType="{x:Type my:VideoItem}">
                                <UI:CanvasItem>
                                    <Image Source="Resources/videoItem.png"/>
                                </UI:CanvasItem>
                            </DataTemplate>

                            <!--VideoListItem-->
                            <DataTemplate DataType="{x:Type my:VideoListItem}">
                                <UI:CanvasItem>
                                    <Image Source="Resources/videosItem.png"/>
                                </UI:CanvasItem>
                            </DataTemplate>

                            <!--imageItem-->
                            <DataTemplate DataType="{x:Type my:PictureItem}">
                                <UI:CanvasItem>
                                    <Image Source="Resources/imageItem.jpg"/>
                                </UI:CanvasItem>
                            </DataTemplate>

                            <!--imageItem-->
                            <DataTemplate DataType="{x:Type my:PictureListItem}">
                                <UI:CanvasItem>
                                    <Image Source="Resources/imagesItem.png"/>
                                </UI:CanvasItem>
                            </DataTemplate>

                            <!--youtubeItem-->
                            <DataTemplate DataType="{x:Type my:YoutubeVideoItem}">
                                <UI:CanvasItem>
                                    <Grid Background="White" Margin="10">
                                        <Image Source="Resources/youtubeItem.png" Margin="-10"/>
                                    </Grid>
                                </UI:CanvasItem>
                            </DataTemplate>

                        </ItemsControl.Resources>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas  IsItemsHost="True"
                                     ClipToBounds="True"
                                     Width="640"
                                     Height="360"
                                     SnapsToDevicePixels="True"
                                     Loaded="designerCanvasLoaded"
                                     />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                                <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                                <Setter Property="RenderTransform" Value="{Binding Angle, Mode=TwoWay, Converter={StaticResource AngleConverter}}"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <EventSetter Event="PreviewMouseDown" Handler="pItemPreviewMouseDown"/>
                                <EventSetter Event="KeyDown" Handler="pItemKeyDown"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ListView>
                </Viewbox>

                <!--<Viewbox Stretch="Fill">

                <Canvas 
                         ClipToBounds="True"
                         Width="600" Height="600"
                         PreviewMouseUp="DesignerCanvas_PreviewMouseUp"
                         SnapsToDevicePixels="True" >
                    <ContentControl Width="100"
                      Height="100"
                      Padding="1"
                      Canvas.Left="0"
                      Canvas.Top="0"
                      Style="{StaticResource DesignerItemStyle}">
                        <Ellipse IsHitTestVisible="False" >
                            <Shape.Fill>
                                <RadialGradientBrush Center="0.2, 0.2" GradientOrigin="0.2, 0.2" RadiusX="0.8" RadiusY="0.8">
                                    <GradientStop Color="LightBlue" Offset="0"/>
                                    <GradientStop Color="Blue" Offset="0.9"/>
                                </RadialGradientBrush>
                            </Shape.Fill>
                        </Ellipse>
                    </ContentControl>

                </Canvas>
            </Viewbox>-->
                <!--<Canvas  x:Name="DesignerCanvas"
                         ClipToBounds="True"
                         Width="600" Height="600"
                         SnapsToDevicePixels="True">

                -->
                <!--Ellipse-->
                <!--
                <ContentControl Width="100"
                      Height="100"
                      Padding="1"
                      Canvas.Left="0"
                      Canvas.Top="0"
                      Style="{StaticResource DesignerItemStyle}">
                    <Ellipse IsHitTestVisible="False" >
                        <Shape.Fill>
                            <RadialGradientBrush Center="0.2, 0.2" GradientOrigin="0.2, 0.2" RadiusX="0.8" RadiusY="0.8">
                                <GradientStop Color="LightBlue" Offset="0"/>
                                <GradientStop Color="Blue" Offset="0.9"/>
                            </RadialGradientBrush>
                        </Shape.Fill>
                    </Ellipse>
                </ContentControl>

                -->
                <!--Ellipse-->
                <!--
                <ContentControl Width="100"
                      Height="100"
                      Padding="1"
                      Canvas.Left="0"
                      Canvas.Top="0"
                      Style="{StaticResource DesignerItemStyle}">
                    <Ellipse IsHitTestVisible="False">
                        <Shape.Fill>
                            <RadialGradientBrush Center="0.2,0.2" GradientOrigin="0.2,0.2" RadiusX="0.8" RadiusY="0.8">
                                <GradientStop Color="Lime" Offset="0"/>
                                <GradientStop Color="#FF00AA00" Offset="0.9"/>
                            </RadialGradientBrush>
                        </Shape.Fill>
                    </Ellipse>
                </ContentControl>

                -->
                <!--Ellipse-->
                <!--
                <ContentControl Width="100"
                      Height="100"
                      Padding="1"
                      Canvas.Left="0"
                      Canvas.Top="0"
                      Style="{StaticResource DesignerItemStyle}">
                    <Ellipse IsHitTestVisible="False">
                        <Shape.Fill>
                            <RadialGradientBrush Center="0.2,0.2" GradientOrigin="0.2,0.2" RadiusX="0.8" RadiusY="0.8">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="#FFFF8300" Offset="0.9"/>
                            </RadialGradientBrush>
                        </Shape.Fill>
                    </Ellipse>
                </ContentControl>

                -->
                <!--Image-->
                <!--
                <ContentControl Width="100"
                      Height="100"
                      Canvas.Left="210"
                      Canvas.Top="220"
                      Style="{StaticResource DesignerItemStyle}">
                    <Image IsHitTestVisible="False" Stretch="Fill" Source="Media/cross.png"/>
                </ContentControl>

                -->
                <!--Image-->
                <!--
                <ContentControl Width="100"
                      Height="100"
                      Canvas.Left="75"
                      Canvas.Top="385"
                      Style="{StaticResource DesignerItemStyle}">
                    <Image IsHitTestVisible="False" Stretch="Fill" Source="Media/paint.png"/>
                </ContentControl>

                -->
                <!--Satelite-->
                <!--

                <ContentControl Width="130"
                      Height="130"
                      Canvas.Left="50"
                      Canvas.Top="75"
                      Style="{StaticResource DesignerItemStyle}">
                    <ContentControl.Resources>
                        <Storyboard x:Key="OnLoaded" >
                            <DoubleAnimation From="0" To="360"
                             AutoReverse="False"
                             RepeatBehavior="Forever"
                             Duration="00:00:20"
                             Storyboard.TargetName="rotation"
                             Storyboard.TargetProperty ="Angle">
                            </DoubleAnimation>
                        </Storyboard>
                    </ContentControl.Resources>
                    <Viewbox Stretch="Fill">
                        <Label Name="label"
                 RenderTransformOrigin="0.5,0.5"
                 Content=""
                 FontFamily="Webdings"
                 FontSize="200"
                 Foreground="Yellow"
                 IsHitTestVisible="False">
                            <Label.RenderTransform>
                                <RotateTransform x:Name="rotation"/>
                            </Label.RenderTransform>
                        </Label>
                    </Viewbox>

                    <ContentControl.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource OnLoaded}"/>
                        </EventTrigger>
                    </ContentControl.Triggers>
                </ContentControl>

                -->
                <!--Media-->
                <!--

                <ContentControl Width="130"
                      Height="130"
                      Padding="2"
                      Canvas.Left="640"
                      Canvas.Top="80"
                      Style="{StaticResource DesignerItemStyle}">
                    <Grid>
                        <Border CornerRadius="5"
                  IsHitTestVisible="False"
                  BorderBrush="#E0E0E0"
                  BorderThickness="0,1,0,0"
                  Background="{DynamicResource FrameBackground}"/>
                        <Border BorderBrush="Black"
                  BorderThickness="0,0,0,1"
                  CornerRadius="5" />
                        <Border Background="Transparent" CornerRadius="0" Margin="5,5,5,25" IsHitTestVisible="False"/>
                        <Border BorderBrush="#E0E0E0" BorderThickness="0,0,1,1" CornerRadius="0" Margin="5,5,5,25"/>
                        <Border BorderBrush="#303030" BorderThickness="1,1,0,0" CornerRadius="0" Margin="5,5,5,25">
                            <MediaElement IsHitTestVisible="False"
                          Name="mediaElement"
                          Margin="0,0,1,1"
                          Stretch="Fill" >
                                <MediaElement.Triggers>
                                    <EventTrigger RoutedEvent="MediaElement.Loaded">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <MediaTimeline Source="./media/intro.wmv"
                                       Storyboard.TargetName="mediaElement"
                                       RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </MediaElement.Triggers>
                            </MediaElement>
                        </Border>
                    </Grid>
                </ContentControl>

                -->
                <!--TextBox-->
                <!--
                <ContentControl Width="130"
                      Height="130"
                      Padding="2"
                      Canvas.Left="360"
                      Canvas.Top="60"
                      Style="{StaticResource DesignerItemStyle}">
                    <Grid>
                        <Border CornerRadius="5"
                  IsHitTestVisible="False"
                  BorderBrush="#E0E0E0"
                  BorderThickness="0,1,0,0"
                  Background="{DynamicResource FrameBackground}"/>
                        <Border BorderBrush="Black"
                  BorderThickness="0,0,0,1"
                  CornerRadius="5" />
                        <Border Background="WhiteSmoke" CornerRadius="5" Margin="5,5,5,25" IsHitTestVisible="False"/>
                        <Border BorderBrush="White" BorderThickness="0,0,1,1" CornerRadius="5" Margin="5,5,5,25"/>
                        <Border BorderBrush="Black" BorderThickness="1,1,0,0" CornerRadius="5" Margin="5,5,5,25">
                            <TextBox FontSize="11"
                     Margin="1,1,0,0"
                     Foreground="DimGray"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     BorderThickness="0"
                     Background="Transparent"
                     Text="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."/>
                        </Border>
                    </Grid>
                </ContentControl>

                -->
                <!--ECG-->
                <!--
                <ContentControl Width="130"
                      Height="130"
                      Padding="2"
                      Canvas.Left="380"
                      Canvas.Top="340"
                      Style="{StaticResource DesignerItemStyle}">
                    <Grid IsHitTestVisible="False">
                        <Border CornerRadius="5"
                  BorderBrush="#E0E0E0"
                  BorderThickness="0,1,0,0"
                  Background="{DynamicResource FrameBackground}"/>
                        <Border BorderBrush="Black"
                  BorderThickness="0,0,0,1"
                  CornerRadius="5" />
                        <Border Background="{StaticResource MyGridBrushResource}" CornerRadius="5" Margin="5,5,5,25" IsHitTestVisible="False"/>
                        <Border BorderBrush="#E0E0E0" BorderThickness="0,0,1,1" CornerRadius="5" Margin="5,5,5,25"/>
                        <Border BorderBrush="#303030" BorderThickness="1,1,0,0" CornerRadius="5" Margin="5,5,5,25">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="Line">
                                        <Setter Property="Stroke" Value="Lime" />
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Style>
                                    <Storyboard x:Key="OnLoaded">
                                        <DoubleAnimation From="0" To="1.0"
                                   RepeatBehavior="Forever"
                                   Duration="00:00:2"
                                   Storyboard.TargetName="backgroundBrush"
                                   Storyboard.TargetProperty="GradientStops[2].Offset">
                                        </DoubleAnimation>

                                        <DoubleAnimation From="0.01" To="1.01"
                                   RepeatBehavior="Forever"
                                   Duration="00:00:2"
                                   Storyboard.TargetName="backgroundBrush"
                                   Storyboard.TargetProperty ="GradientStops[3].Offset">
                                        </DoubleAnimation>
                                        <DoubleAnimation From="-0.9" To="0.1"
                                   RepeatBehavior="Forever"
                                   Duration="00:00:2"
                                   Storyboard.TargetName="backgroundBrush"
                                   Storyboard.TargetProperty ="GradientStops[1].Offset">
                                        </DoubleAnimation>

                                    </Storyboard>
                                </Grid.Resources>
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard Storyboard="{StaticResource OnLoaded}"/>
                                    </EventTrigger>
                                </Grid.Triggers>
                                <Grid Background="Transparent">
                                    <Border BorderBrush="#00F300" BorderThickness="0" Margin="10">
                                        <Path Name="polyLine" StrokeThickness="1" Stretch="Fill" Margin="5"
                        Data="M 0,10 4,10 6,8 7,10 9,10 10,11, 11,1 12,13 13,10 18,10 21,8 24,10
                                30,10 34,10 36,8 37,10 39,10 40,11, 41,1 42,13 43,10 48,10 51,8 54,10">
                                            <Path.Stroke>
                                                <LinearGradientBrush x:Name="backgroundBrush" StartPoint="0,0" EndPoint="1,0" SpreadMethod="Repeat">
                                                    <GradientStop Color="Transparent" Offset ="0.0" />
                                                    <GradientStop Color="Transparent" Offset ="0.0" />
                                                    <GradientStop Color="#00FF00" Offset ="0.0"/>
                                                    <GradientStop Color="Transparent" Offset ="0.0" />
                                                    <GradientStop Color="Transparent" Offset ="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                        </Path>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ContentControl>-->
                <!--

            </Canvas>-->
            </Grid>


            <!--ThreePics Layout-->
            <!--<Grid Grid.Row="1"
              Tag="{Binding Path=SelectedLayout, Converter={StaticResource enumToBool}, ConverterParameter=ThreePics}"
              Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVis}}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
           
        </Grid>-->

            <!--Banner-->
            <GroupBox Header="Banner" Grid.Row="2" Margin="4,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackPanel VerticalAlignment="Top" 
                                HorizontalAlignment="Right" 
                                Grid.Column="1" 
                                Orientation="Horizontal">
                        <Button Padding="3" Margin="4,0"
                                Click="btnRestoreBannerPopup" Width="25">
                            <Image Source="Resources\restore.png" Stretch="Uniform"/>
                        </Button>
                        <Button Padding="3" Margin="4,0"
                                Click="btnShowBannerPopup" Width="25">
                            <Image Source="Resources\export-arrow.png" Stretch="Uniform"/>
                        </Button>
                        <Button Padding="3" Margin="4,0"
                                Click="btnHideBannerPopup" Width="25" >
                            <Image Source="Resources\close-button.png" Stretch="Uniform"/>
                        </Button>
                    </StackPanel>
                    <StackPanel>
                        <CheckBox Content="Show ?" IsChecked="{Binding Banner.IsVisible}" Margin="8,4" HorizontalAlignment="Left"/>

                        <DockPanel LastChildFill="True" Margin="4">
                            <TextBlock DockPanel.Dock="Left" Text="Text" Padding="0,0,4,0"/>
                            <TextBox Text="{Binding Banner.Text}" Margin="4,0" Width="Auto"/>
                        </DockPanel>
                    </StackPanel>

                    <DockPanel LastChildFill="True" Margin="4"
                           Grid.Row="1">
                        <TextBlock DockPanel.Dock="Left" Text="Pics Dir" Padding="0,0,4,0"/>
                        <TextBox Text="{Binding Banner.PicsPath}" Margin="4,0"/>
                    </DockPanel>
                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <Label Content="Position"/>

                        <RadioButton x:Name="rb_BannerPosButtom" Content="Buttom"  Margin="4,0,4,0" IsChecked="True"
                              VerticalAlignment="Center"
                                 />
                        <RadioButton x:Name="rb_BannerPosTop" Content="Top" Margin="4,0,10,0" IsChecked="{Binding Banner.ShowOnTop}"
                              VerticalAlignment="Center"
                                 />

                    </StackPanel>
                    <StackPanel Grid.Row="3" Orientation="Horizontal">
                        <Label Content="Speed"/>
                        <Slider Width="100"
                        Margin="4,0"
                        Minimum="2" 
                        Maximum="40" 
                        SmallChange="0.5" 
                        VerticalAlignment="Center"
                        Value="{Binding Banner.Speed}" />

                        <CheckBox Content="Left -> Right" 
                              Margin="4,0,4,0"
                              VerticalAlignment="Center"
                              IsChecked="{Binding Banner.Direction, Converter={StaticResource flowDirection2Bool}}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="4" Orientation="Horizontal">
                        <Button Click="btnBannerFontPicker" 
                        Content="Font"
                        Margin="4,0"
                        Height="25"
                        Padding="4,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"/>
                        <Button Click="btnBannerForeColorPicker" 
                        Style="{StaticResource colorBtn}"
                        DataContext="{Binding Banner.ForeColor}"
                        Margin="4,0"
                        BorderThickness="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"/>
                        <Button Click="btnBannerBackColorPicker" 
                        Style="{StaticResource colorBtn}"
                        DataContext="{Binding Banner.BackColor}"
                        Margin="4,0"
                        BorderThickness="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"/>


                    </StackPanel>

                </Grid>
            </GroupBox>

            <Label x:Name="VersionLbl" Grid.Row="3"/>
        </StackPanel>
    </Grid>
</Window>
